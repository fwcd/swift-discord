{"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Discord\/documentation\/Discord\/CodableBox"},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/Discord\/documentation\/Discord\/CodableBox\/init(from:)","doc:\/\/Discord\/documentation\/Discord\/CodableBox\/init(wrappedValue:)"],"title":"Initializers"},{"identifiers":["doc:\/\/Discord\/documentation\/Discord\/CodableBox\/wrappedValue"],"title":"Instance Properties"},{"identifiers":["doc:\/\/Discord\/documentation\/Discord\/CodableBox\/encode(to:)"],"title":"Instance Methods"},{"generated":true,"identifiers":["doc:\/\/Discord\/documentation\/Discord\/CodableBox\/Equatable-Implementations","doc:\/\/Discord\/documentation\/Discord\/CodableBox\/Hashable-Implementations"],"title":"Default Implementations"}],"metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodableBox"}],"navigatorTitle":[{"kind":"identifier","text":"CodableBox"}],"symbolKind":"class","title":"CodableBox","role":"symbol","roleHeading":"Class","modules":[{"name":"Discord"}],"externalID":"s:7Discord10CodableBoxC"},"abstract":[{"type":"text","text":"An immutable container storing a wrapped value on"},{"type":"text","text":" "},{"type":"text","text":"the heap. This is useful when a codable value type"},{"type":"text","text":" "},{"type":"text","text":"recursively may contain itself."}],"relationshipsSections":[{"identifiers":["doc:\/\/Discord\/Se","doc:\/\/Discord\/SE","doc:\/\/Discord\/SQ","doc:\/\/Discord\/SH"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodableBox","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:Se","text":"Decodable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SE","text":"Encodable","kind":"typeIdentifier"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/discord\/codablebox"]}],"hierarchy":{"paths":[["doc:\/\/Discord\/documentation\/Discord"]]},"references":{"doc://Discord/SE":{"identifier":"doc:\/\/Discord\/SE","type":"unresolvable","title":"Swift.Encodable"},"doc://Discord/documentation/Discord":{"identifier":"doc:\/\/Discord\/documentation\/Discord","type":"topic","title":"Discord","abstract":[{"text":"Write chat bots using the Discord API.","type":"text"}],"kind":"symbol","role":"collection","url":"\/documentation\/discord"},"doc://Discord/documentation/Discord/CodableBox":{"abstract":[{"text":"An immutable container storing a wrapped value on","type":"text"},{"text":" ","type":"text"},{"text":"the heap. This is useful when a codable value type","type":"text"},{"text":" ","type":"text"},{"text":"recursively may contain itself.","type":"text"}],"role":"symbol","identifier":"doc:\/\/Discord\/documentation\/Discord\/CodableBox","navigatorTitle":[{"kind":"identifier","text":"CodableBox"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodableBox"}],"title":"CodableBox","type":"topic","url":"\/documentation\/discord\/codablebox"},"doc://Discord/SH":{"identifier":"doc:\/\/Discord\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://Discord/documentation/Discord/CodableBox/encode(to:)":{"url":"\/documentation\/discord\/codablebox\/encode(to:)","identifier":"doc:\/\/Discord\/documentation\/Discord\/CodableBox\/encode(to:)","kind":"symbol","type":"topic","role":"symbol","abstract":[],"title":"encode(to:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Encoder","preciseIdentifier":"s:s7EncoderP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}]},"doc://Discord/Se":{"identifier":"doc:\/\/Discord\/Se","type":"unresolvable","title":"Swift.Decodable"},"doc://Discord/SQ":{"identifier":"doc:\/\/Discord\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://Discord/documentation/Discord/CodableBox/Equatable-Implementations":{"url":"\/documentation\/discord\/codablebox\/equatable-implementations","identifier":"doc:\/\/Discord\/documentation\/Discord\/CodableBox\/Equatable-Implementations","kind":"article","type":"topic","role":"collectionGroup","abstract":[],"title":"Equatable Implementations"},"doc://Discord/documentation/Discord/CodableBox/init(wrappedValue:)":{"url":"\/documentation\/discord\/codablebox\/init(wrappedvalue:)","identifier":"doc:\/\/Discord\/documentation\/Discord\/CodableBox\/init(wrappedValue:)","kind":"symbol","type":"topic","role":"symbol","abstract":[],"title":"init(wrappedValue:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}]},"doc://Discord/documentation/Discord/CodableBox/wrappedValue":{"url":"\/documentation\/discord\/codablebox\/wrappedvalue","identifier":"doc:\/\/Discord\/documentation\/Discord\/CodableBox\/wrappedValue","kind":"symbol","type":"topic","role":"symbol","abstract":[],"title":"wrappedValue","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"}]},"doc://Discord/documentation/Discord/CodableBox/init(from:)":{"url":"\/documentation\/discord\/codablebox\/init(from:)","identifier":"doc:\/\/Discord\/documentation\/Discord\/CodableBox\/init(from:)","kind":"symbol","type":"topic","role":"symbol","abstract":[],"title":"init(from:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Decoder","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}]},"doc://Discord/documentation/Discord/CodableBox/Hashable-Implementations":{"url":"\/documentation\/discord\/codablebox\/hashable-implementations","identifier":"doc:\/\/Discord\/documentation\/Discord\/CodableBox\/Hashable-Implementations","kind":"article","type":"topic","role":"collectionGroup","abstract":[],"title":"Hashable Implementations"}}}