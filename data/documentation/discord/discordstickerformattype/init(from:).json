{"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":" "},{"kind":"internalParam","text":"decoder"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier","text":"Decoder"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"languages":["swift"]}],"kind":"declarations"}],"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"RawRepresentable.init(from:)"},{"type":"text","text":"."}],"metadata":{"symbolKind":"init","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Decoder","preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"externalID":"s:SYsSeRzSi8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc::SYNTHESIZED::s:7Discord0A17StickerFormatTypeV","title":"init(from:)","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Int"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"roleHeading":"Initializer","extendedModule":"Swift","role":"symbol","modules":[{"name":"Discord"}]},"identifier":{"url":"doc:\/\/Discord\/documentation\/Discord\/DiscordStickerFormatType\/init(from:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/discord\/discordstickerformattype\/init(from:)"]}],"hierarchy":{"paths":[["doc:\/\/Discord\/documentation\/Discord","doc:\/\/Discord\/documentation\/Discord\/DiscordStickerFormatType","doc:\/\/Discord\/documentation\/Discord\/DiscordStickerFormatType\/RawRepresentable-Implementations"]]},"references":{"doc://Discord/documentation/Discord/DiscordStickerFormatType":{"navigatorTitle":[{"kind":"identifier","text":"DiscordStickerFormatType"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/Discord\/documentation\/Discord\/DiscordStickerFormatType","url":"\/documentation\/discord\/discordstickerformattype","abstract":[],"type":"topic","title":"DiscordStickerFormatType","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DiscordStickerFormatType"}]},"doc://Discord/documentation/Discord":{"abstract":[{"type":"text","text":"Write chat bots using the Discord API."}],"kind":"symbol","identifier":"doc:\/\/Discord\/documentation\/Discord","role":"collection","type":"topic","title":"Discord","url":"\/documentation\/discord"},"doc://Discord/documentation/Discord/DiscordStickerFormatType/RawRepresentable-Implementations":{"role":"collectionGroup","type":"topic","abstract":[],"title":"RawRepresentable Implementations","kind":"article","identifier":"doc:\/\/Discord\/documentation\/Discord\/DiscordStickerFormatType\/RawRepresentable-Implementations","url":"\/documentation\/discord\/discordstickerformattype\/rawrepresentable-implementations"},"doc://Discord/documentation/Discord/DiscordStickerFormatType/init(from:)":{"identifier":"doc:\/\/Discord\/documentation\/Discord\/DiscordStickerFormatType\/init(from:)","title":"init(from:)","kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RawValue"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Int"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"role":"symbol","type":"topic","url":"\/documentation\/discord\/discordstickerformattype\/init(from:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","text":"Decoder"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[]}}}