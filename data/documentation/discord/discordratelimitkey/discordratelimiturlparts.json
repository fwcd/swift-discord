{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Discord\/documentation\/Discord\/DiscordRateLimitKey\/DiscordRateLimitURLParts"},"hierarchy":{"paths":[["doc:\/\/Discord\/documentation\/Discord","doc:\/\/Discord\/documentation\/Discord\/DiscordRateLimitKey"]]},"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"relationshipsSections":[{"type":"conformsTo","kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/Discord\/SQ","doc:\/\/Discord\/s25ExpressibleByArrayLiteralP","doc:\/\/Discord\/s9OptionSetP","doc:\/\/Discord\/SY","doc:\/\/Discord\/s10SetAlgebraP"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DiscordRateLimitURLParts"}],"languages":["swift"]}]}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Discord\/documentation\/Discord\/DiscordRateLimitKey\/DiscordRateLimitURLParts\/init(rawValue:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Discord\/documentation\/Discord\/DiscordRateLimitKey\/DiscordRateLimitURLParts\/rawValue"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/Discord\/documentation\/Discord\/DiscordRateLimitKey\/DiscordRateLimitURLParts\/Equatable-Implementations","doc:\/\/Discord\/documentation\/Discord\/DiscordRateLimitKey\/DiscordRateLimitURLParts\/OptionSet-Implementations","doc:\/\/Discord\/documentation\/Discord\/DiscordRateLimitKey\/DiscordRateLimitURLParts\/SetAlgebra-Implementations"]}],"kind":"symbol","variants":[{"paths":["\/documentation\/discord\/discordratelimitkey\/discordratelimiturlparts"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"URL Parts for the purpose of rate limiting."},{"type":"text","text":" "},{"type":"text","text":"Combine all the parts of the URL into a list of which parts exist"},{"type":"text","text":" "},{"type":"text","text":"Ex. \/channels\/232184444340011009\/messages would be represented by [.channels, .channelID, .messages]"},{"type":"text","text":" "},{"type":"text","text":"Anything that ends in “ID” represents the existence of a snowflake id, but the actual ID should be"},{"type":"text","text":" "},{"type":"text","text":"stored separately if needed.  Technically, the .guildID and .channelID fields aren’t needed since"},{"type":"text","text":" "},{"type":"text","text":"the full ID will also be stored, but they’re included to make the system more straightforward."}],"metadata":{"modules":[{"name":"Discord"}],"roleHeading":"Structure","externalID":"s:7Discord0A12RateLimitKeyV0abC8URLPartsV","navigatorTitle":[{"kind":"identifier","text":"DiscordRateLimitURLParts"}],"role":"symbol","title":"DiscordRateLimitKey.DiscordRateLimitURLParts","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DiscordRateLimitURLParts"}],"symbolKind":"struct"},"references":{"doc://Discord/documentation/Discord/DiscordRateLimitKey/DiscordRateLimitURLParts/rawValue":{"kind":"symbol","identifier":"doc:\/\/Discord\/documentation\/Discord\/DiscordRateLimitKey\/DiscordRateLimitURLParts\/rawValue","role":"symbol","url":"\/documentation\/discord\/discordratelimitkey\/discordratelimiturlparts\/rawvalue","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"rawValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V","text":"Int64"}],"abstract":[],"title":"rawValue","type":"topic"},"doc://Discord/documentation/Discord/DiscordRateLimitKey/DiscordRateLimitURLParts/Equatable-Implementations":{"type":"topic","identifier":"doc:\/\/Discord\/documentation\/Discord\/DiscordRateLimitKey\/DiscordRateLimitURLParts\/Equatable-Implementations","kind":"article","title":"Equatable Implementations","url":"\/documentation\/discord\/discordratelimitkey\/discordratelimiturlparts\/equatable-implementations","abstract":[],"role":"collectionGroup"},"doc://Discord/s10SetAlgebraP":{"type":"unresolvable","identifier":"doc:\/\/Discord\/s10SetAlgebraP","title":"Swift.SetAlgebra"},"doc://Discord/documentation/Discord/DiscordRateLimitKey/DiscordRateLimitURLParts/init(rawValue:)":{"type":"topic","identifier":"doc:\/\/Discord\/documentation\/Discord\/DiscordRateLimitKey\/DiscordRateLimitURLParts\/init(rawValue:)","kind":"symbol","title":"init(rawValue:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"rawValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V","text":"Int64"},{"kind":"text","text":")"}],"url":"\/documentation\/discord\/discordratelimitkey\/discordratelimiturlparts\/init(rawvalue:)","abstract":[],"role":"symbol"},"doc://Discord/documentation/Discord/DiscordRateLimitKey/DiscordRateLimitURLParts/OptionSet-Implementations":{"kind":"article","url":"\/documentation\/discord\/discordratelimitkey\/discordratelimiturlparts\/optionset-implementations","role":"collectionGroup","type":"topic","title":"OptionSet Implementations","abstract":[],"identifier":"doc:\/\/Discord\/documentation\/Discord\/DiscordRateLimitKey\/DiscordRateLimitURLParts\/OptionSet-Implementations"},"doc://Discord/documentation/Discord":{"url":"\/documentation\/discord","title":"Discord","type":"topic","role":"collection","identifier":"doc:\/\/Discord\/documentation\/Discord","abstract":[{"type":"text","text":"Write chat bots using the Discord API."}],"kind":"symbol"},"doc://Discord/s25ExpressibleByArrayLiteralP":{"type":"unresolvable","identifier":"doc:\/\/Discord\/s25ExpressibleByArrayLiteralP","title":"Swift.ExpressibleByArrayLiteral"},"doc://Discord/documentation/Discord/DiscordRateLimitKey":{"identifier":"doc:\/\/Discord\/documentation\/Discord\/DiscordRateLimitKey","kind":"symbol","url":"\/documentation\/discord\/discordratelimitkey","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DiscordRateLimitKey"}],"navigatorTitle":[{"kind":"identifier","text":"DiscordRateLimitKey"}],"abstract":[{"text":"An endpoint is made up of a REST api endpoint and any major parameters in that endpoint.","type":"text"},{"text":" ","type":"text"},{"text":"Ex. \/channels\/232184444340011009\/messages and \/channels\/186926276592795659\/messages","type":"text"},{"text":" ","type":"text"},{"text":"Are considered different endpoints","type":"text"}],"type":"topic","title":"DiscordRateLimitKey","role":"symbol"},"doc://Discord/documentation/Discord/DiscordRateLimitKey/DiscordRateLimitURLParts":{"identifier":"doc:\/\/Discord\/documentation\/Discord\/DiscordRateLimitKey\/DiscordRateLimitURLParts","kind":"symbol","url":"\/documentation\/discord\/discordratelimitkey\/discordratelimiturlparts","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DiscordRateLimitURLParts"}],"navigatorTitle":[{"kind":"identifier","text":"DiscordRateLimitURLParts"}],"abstract":[{"text":"URL Parts for the purpose of rate limiting.","type":"text"},{"text":" ","type":"text"},{"text":"Combine all the parts of the URL into a list of which parts exist","type":"text"},{"text":" ","type":"text"},{"text":"Ex. \/channels\/232184444340011009\/messages would be represented by [.channels, .channelID, .messages]","type":"text"},{"text":" ","type":"text"},{"text":"Anything that ends in “ID” represents the existence of a snowflake id, but the actual ID should be","type":"text"},{"text":" ","type":"text"},{"text":"stored separately if needed.  Technically, the .guildID and .channelID fields aren’t needed since","type":"text"},{"text":" ","type":"text"},{"text":"the full ID will also be stored, but they’re included to make the system more straightforward.","type":"text"}],"type":"topic","title":"DiscordRateLimitKey.DiscordRateLimitURLParts","role":"symbol"},"doc://Discord/SY":{"type":"unresolvable","identifier":"doc:\/\/Discord\/SY","title":"Swift.RawRepresentable"},"doc://Discord/documentation/Discord/DiscordRateLimitKey/DiscordRateLimitURLParts/SetAlgebra-Implementations":{"abstract":[],"title":"SetAlgebra Implementations","url":"\/documentation\/discord\/discordratelimitkey\/discordratelimiturlparts\/setalgebra-implementations","type":"topic","kind":"article","role":"collectionGroup","identifier":"doc:\/\/Discord\/documentation\/Discord\/DiscordRateLimitKey\/DiscordRateLimitURLParts\/SetAlgebra-Implementations"},"doc://Discord/s9OptionSetP":{"type":"unresolvable","identifier":"doc:\/\/Discord\/s9OptionSetP","title":"Swift.OptionSet"},"doc://Discord/SQ":{"type":"unresolvable","identifier":"doc:\/\/Discord\/SQ","title":"Swift.Equatable"}}}