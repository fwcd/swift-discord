{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Discord\/documentation\/Discord\/DiscordRateLimitKey\/DiscordRateLimitURLParts"},"kind":"symbol","variants":[{"paths":["\/documentation\/discord\/discordratelimitkey\/discordratelimiturlparts"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"URL Parts for the purpose of rate limiting.","type":"text"},{"text":" ","type":"text"},{"text":"Combine all the parts of the URL into a list of which parts exist","type":"text"},{"text":" ","type":"text"},{"text":"Ex. \/channels\/232184444340011009\/messages would be represented by [.channels, .channelID, .messages]","type":"text"},{"text":" ","type":"text"},{"text":"Anything that ends in “ID” represents the existence of a snowflake id, but the actual ID should be","type":"text"},{"text":" ","type":"text"},{"text":"stored separately if needed.  Technically, the .guildID and .channelID fields aren’t needed since","type":"text"},{"text":" ","type":"text"},{"text":"the full ID will also be stored, but they’re included to make the system more straightforward.","type":"text"}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Discord\/documentation\/Discord\/DiscordRateLimitKey\/DiscordRateLimitURLParts\/init(rawValue:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Discord\/documentation\/Discord\/DiscordRateLimitKey\/DiscordRateLimitURLParts\/rawValue"]},{"title":"Default Implementations","identifiers":["doc:\/\/Discord\/documentation\/Discord\/DiscordRateLimitKey\/DiscordRateLimitURLParts\/Equatable-Implementations","doc:\/\/Discord\/documentation\/Discord\/DiscordRateLimitKey\/DiscordRateLimitURLParts\/OptionSet-Implementations","doc:\/\/Discord\/documentation\/Discord\/DiscordRateLimitKey\/DiscordRateLimitURLParts\/SetAlgebra-Implementations"],"generated":true}],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"title":"DiscordRateLimitKey.DiscordRateLimitURLParts","symbolKind":"struct","navigatorTitle":[{"kind":"identifier","text":"DiscordRateLimitURLParts"}],"roleHeading":"Structure","role":"symbol","modules":[{"name":"Discord"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DiscordRateLimitURLParts"}],"externalID":"s:7Discord0A12RateLimitKeyV0abC8URLPartsV"},"sections":[],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/Discord\/SQ","doc:\/\/Discord\/s25ExpressibleByArrayLiteralP","doc:\/\/Discord\/s9OptionSetP","doc:\/\/Discord\/SY","doc:\/\/Discord\/s10SetAlgebraP"],"type":"conformsTo","kind":"relationships"}],"hierarchy":{"paths":[["doc:\/\/Discord\/documentation\/Discord","doc:\/\/Discord\/documentation\/Discord\/DiscordRateLimitKey"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DiscordRateLimitURLParts"}],"platforms":["Linux"]}],"kind":"declarations"}],"references":{"doc://Discord/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/Discord\/SQ"},"doc://Discord/s9OptionSetP":{"type":"unresolvable","title":"Swift.OptionSet","identifier":"doc:\/\/Discord\/s9OptionSetP"},"doc://Discord/documentation/Discord/DiscordRateLimitKey":{"type":"topic","role":"symbol","title":"DiscordRateLimitKey","abstract":[{"text":"An endpoint is made up of a REST api endpoint and any major parameters in that endpoint.","type":"text"},{"text":" ","type":"text"},{"text":"Ex. \/channels\/232184444340011009\/messages and \/channels\/186926276592795659\/messages","type":"text"},{"text":" ","type":"text"},{"text":"Are considered different endpoints","type":"text"}],"url":"\/documentation\/discord\/discordratelimitkey","kind":"symbol","navigatorTitle":[{"text":"DiscordRateLimitKey","kind":"identifier"}],"identifier":"doc:\/\/Discord\/documentation\/Discord\/DiscordRateLimitKey","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DiscordRateLimitKey","kind":"identifier"}]},"doc://Discord/SY":{"type":"unresolvable","title":"Swift.RawRepresentable","identifier":"doc:\/\/Discord\/SY"},"doc://Discord/s10SetAlgebraP":{"type":"unresolvable","title":"Swift.SetAlgebra","identifier":"doc:\/\/Discord\/s10SetAlgebraP"},"doc://Discord/documentation/Discord/DiscordRateLimitKey/DiscordRateLimitURLParts/rawValue":{"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"rawValue"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int64V","kind":"typeIdentifier","text":"Int64"}],"title":"rawValue","url":"\/documentation\/discord\/discordratelimitkey\/discordratelimiturlparts\/rawvalue","role":"symbol","identifier":"doc:\/\/Discord\/documentation\/Discord\/DiscordRateLimitKey\/DiscordRateLimitURLParts\/rawValue","kind":"symbol","type":"topic","abstract":[]},"doc://Discord/documentation/Discord/DiscordRateLimitKey/DiscordRateLimitURLParts/Equatable-Implementations":{"url":"\/documentation\/discord\/discordratelimitkey\/discordratelimiturlparts\/equatable-implementations","kind":"article","role":"collectionGroup","type":"topic","title":"Equatable Implementations","identifier":"doc:\/\/Discord\/documentation\/Discord\/DiscordRateLimitKey\/DiscordRateLimitURLParts\/Equatable-Implementations","abstract":[]},"doc://Discord/documentation/Discord/DiscordRateLimitKey/DiscordRateLimitURLParts":{"type":"topic","title":"DiscordRateLimitKey.DiscordRateLimitURLParts","url":"\/documentation\/discord\/discordratelimitkey\/discordratelimiturlparts","navigatorTitle":[{"text":"DiscordRateLimitURLParts","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Discord\/documentation\/Discord\/DiscordRateLimitKey\/DiscordRateLimitURLParts","abstract":[{"type":"text","text":"URL Parts for the purpose of rate limiting."},{"type":"text","text":" "},{"type":"text","text":"Combine all the parts of the URL into a list of which parts exist"},{"type":"text","text":" "},{"type":"text","text":"Ex. \/channels\/232184444340011009\/messages would be represented by [.channels, .channelID, .messages]"},{"type":"text","text":" "},{"type":"text","text":"Anything that ends in “ID” represents the existence of a snowflake id, but the actual ID should be"},{"type":"text","text":" "},{"type":"text","text":"stored separately if needed.  Technically, the .guildID and .channelID fields aren’t needed since"},{"type":"text","text":" "},{"type":"text","text":"the full ID will also be stored, but they’re included to make the system more straightforward."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DiscordRateLimitURLParts","kind":"identifier"}],"role":"symbol"},"doc://Discord/documentation/Discord/DiscordRateLimitKey/DiscordRateLimitURLParts/init(rawValue:)":{"role":"symbol","identifier":"doc:\/\/Discord\/documentation\/Discord\/DiscordRateLimitKey\/DiscordRateLimitURLParts\/init(rawValue:)","kind":"symbol","url":"\/documentation\/discord\/discordratelimitkey\/discordratelimiturlparts\/init(rawvalue:)","title":"init(rawValue:)","type":"topic","abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"rawValue","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int64V","text":"Int64","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://Discord/documentation/Discord/DiscordRateLimitKey/DiscordRateLimitURLParts/OptionSet-Implementations":{"role":"collectionGroup","abstract":[],"url":"\/documentation\/discord\/discordratelimitkey\/discordratelimiturlparts\/optionset-implementations","kind":"article","type":"topic","identifier":"doc:\/\/Discord\/documentation\/Discord\/DiscordRateLimitKey\/DiscordRateLimitURLParts\/OptionSet-Implementations","title":"OptionSet Implementations"},"doc://Discord/documentation/Discord":{"kind":"symbol","identifier":"doc:\/\/Discord\/documentation\/Discord","abstract":[{"type":"text","text":"Write chat bots using the Discord API."}],"role":"collection","url":"\/documentation\/discord","title":"Discord","type":"topic"},"doc://Discord/documentation/Discord/DiscordRateLimitKey/DiscordRateLimitURLParts/SetAlgebra-Implementations":{"type":"topic","role":"collectionGroup","title":"SetAlgebra Implementations","abstract":[],"url":"\/documentation\/discord\/discordratelimitkey\/discordratelimiturlparts\/setalgebra-implementations","kind":"article","identifier":"doc:\/\/Discord\/documentation\/Discord\/DiscordRateLimitKey\/DiscordRateLimitURLParts\/SetAlgebra-Implementations"},"doc://Discord/s25ExpressibleByArrayLiteralP":{"type":"unresolvable","title":"Swift.ExpressibleByArrayLiteral","identifier":"doc:\/\/Discord\/s25ExpressibleByArrayLiteralP"}}}