{"sections":[],"kind":"symbol","metadata":{"title":"sendMessages(_:to:callback:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"sendMessages","kind":"identifier"},{"text":"([","kind":"text"},{"preciseIdentifier":"s:7Discord0A7MessageV","kind":"typeIdentifier","text":"DiscordMessage"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Discord9ChannelIDa","kind":"typeIdentifier","text":"ChannelID"},{"kind":"text","text":", "},{"kind":"externalParam","text":"callback"},{"kind":"text","text":": ((["},{"preciseIdentifier":"s:7Discord0A7MessageV","kind":"typeIdentifier","text":"DiscordMessage"},{"kind":"text","text":"], "},{"preciseIdentifier":"s:20FoundationNetworking15HTTPURLResponseC","kind":"typeIdentifier","text":"HTTPURLResponse"},{"kind":"text","text":"?) -> ())?)"}],"modules":[{"name":"Discord"}],"extendedModule":"Discord","externalID":"s:7Discord0A16EndpointConsumerPA2A0A9UserActorRzrlE12sendMessages_2to8callbackySayAA0A7MessageVG_AA9SnowflakeVyAJ_20FoundationNetworking15HTTPURLResponseCSgtcSgtF","roleHeading":"Instance Method","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"DiscordUserActor","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"symbolKind":"method"},"abstract":[{"text":"Sends multiple messages in a row","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/discord\/discordendpointconsumer\/sendmessages(_:to:callback:)"]}],"schemaVersion":{"minor":2,"patch":0,"major":0},"identifier":{"url":"doc:\/\/Discord\/documentation\/Discord\/DiscordEndpointConsumer\/sendMessages(_:to:callback:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"sendMessages","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"messages","kind":"internalParam"},{"text":": [","kind":"text"},{"text":"DiscordMessage","preciseIdentifier":"s:7Discord0A7MessageV","kind":"typeIdentifier","identifier":"doc:\/\/Discord\/documentation\/Discord\/DiscordMessage"},{"text":"], ","kind":"text"},{"text":"to","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"channelID","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"ChannelID","preciseIdentifier":"s:7Discord9ChannelIDa","kind":"typeIdentifier","identifier":"doc:\/\/Discord\/documentation\/Discord\/ChannelID"},{"text":", ","kind":"text"},{"text":"callback","kind":"externalParam"},{"text":": (([","kind":"text"},{"text":"DiscordMessage","preciseIdentifier":"s:7Discord0A7MessageV","kind":"typeIdentifier","identifier":"doc:\/\/Discord\/documentation\/Discord\/DiscordMessage"},{"text":"], ","kind":"text"},{"text":"HTTPURLResponse","preciseIdentifier":"s:20FoundationNetworking15HTTPURLResponseC","kind":"typeIdentifier"},{"text":"?) -> ())? = nil)","kind":"text"}],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"name":"messages","content":[{"inlineContent":[{"text":"The list of messages to send","type":"text"}],"type":"paragraph"}]},{"name":"channelID","content":[{"inlineContent":[{"type":"text","text":"The ID of the channel to send the messages to"}],"type":"paragraph"}]},{"name":"callback","content":[{"type":"paragraph","inlineContent":[{"text":"The function that will be called after all messages are sent or one fails to send.","type":"text"},{"text":" ","type":"text"},{"text":"The HTTPURLResponse will be from the last attempt to send a message (first failure or final success).","type":"text"},{"text":" ","type":"text"},{"text":"If all messages were sent successfully, the length of the array will be the same as the length of the input.","type":"text"},{"text":" ","type":"text"},{"text":"Otherwise, the callbackâ€™s array will be shorter.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"Guarantees that the messages will be sent (and received by Discord) in the specified order","type":"text"}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/Discord\/documentation\/Discord","doc:\/\/Discord\/documentation\/Discord\/DiscordEndpointConsumer"]]},"references":{"doc://Discord/documentation/Discord/DiscordEndpointConsumer/sendMessages(_:to:callback:)":{"role":"symbol","abstract":[{"type":"text","text":"Sends multiple messages in a row"}],"title":"sendMessages(_:to:callback:)","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"DiscordUserActor","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","url":"\/documentation\/discord\/discordendpointconsumer\/sendmessages(_:to:callback:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sendMessages"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","preciseIdentifier":"s:7Discord0A7MessageV","text":"DiscordMessage"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Discord9ChannelIDa","text":"ChannelID"},{"kind":"text","text":", "},{"kind":"externalParam","text":"callback"},{"kind":"text","text":": ((["},{"kind":"typeIdentifier","preciseIdentifier":"s:7Discord0A7MessageV","text":"DiscordMessage"},{"kind":"text","text":"], "},{"kind":"typeIdentifier","preciseIdentifier":"s:20FoundationNetworking15HTTPURLResponseC","text":"HTTPURLResponse"},{"kind":"text","text":"?) -> ())?)"}],"kind":"symbol","identifier":"doc:\/\/Discord\/documentation\/Discord\/DiscordEndpointConsumer\/sendMessages(_:to:callback:)"},"doc://Discord/documentation/Discord":{"url":"\/documentation\/discord","role":"collection","type":"topic","identifier":"doc:\/\/Discord\/documentation\/Discord","title":"Discord","abstract":[],"kind":"symbol"},"doc://Discord/documentation/Discord/ChannelID":{"url":"\/documentation\/discord\/channelid","abstract":[{"text":"A Snowflake ID representing a Channel","type":"text"}],"title":"ChannelID","navigatorTitle":[{"text":"ChannelID","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelID","kind":"identifier"}],"identifier":"doc:\/\/Discord\/documentation\/Discord\/ChannelID"},"doc://Discord/documentation/Discord/DiscordEndpointConsumer":{"url":"\/documentation\/discord\/discordendpointconsumer","abstract":[{"text":"Protocol that declares a type will be a consumer of the Discord REST API.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"All requests through from a consumer should be rate limited."}],"title":"DiscordEndpointConsumer","navigatorTitle":[{"text":"DiscordEndpointConsumer","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DiscordEndpointConsumer","kind":"identifier"}],"identifier":"doc:\/\/Discord\/documentation\/Discord\/DiscordEndpointConsumer"},"doc://Discord/documentation/Discord/DiscordMessage":{"navigatorTitle":[{"kind":"identifier","text":"DiscordMessage"}],"title":"DiscordMessage","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DiscordMessage"}],"abstract":[{"type":"text","text":"Represents a Discord chat message."}],"identifier":"doc:\/\/Discord\/documentation\/Discord\/DiscordMessage","kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/discord\/discordmessage"}}}